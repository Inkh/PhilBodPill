// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PhilBodPill.Data;

namespace PhilBodPill.Migrations.PhilBodPillDb
{
    [DbContext(typeof(PhilBodPillDbContext))]
    [Migration("20181206201644_fixOrderTableAgain")]
    partial class fixOrderTableAgain
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PhilBodPill.Models.Basket", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("OrderID");

                    b.Property<int>("ProductID");

                    b.Property<int>("Quantity");

                    b.Property<string>("UserID");

                    b.HasKey("ID");

                    b.HasIndex("OrderID");

                    b.HasIndex("ProductID");

                    b.ToTable("Basket");
                });

            modelBuilder.Entity("PhilBodPill.Models.Order", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<decimal>("TotalPrice");

                    b.Property<string>("UserID");

                    b.HasKey("ID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("PhilBodPill.Models.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Image");

                    b.Property<string>("Name");

                    b.Property<decimal>("Price");

                    b.HasKey("ID");

                    b.ToTable("Product");

                    b.HasData(
                        new { ID = 1, Description = "Have some tea with Bertrand Russell", Image = "/Pillows/BertrandRussell.png", Name = "Bertrand Russell Pillow", Price = 15m },
                        new { ID = 2, Description = "Have some fun with Friedrich Nietzche", Image = "/Pillows/FriedrichNietzche.png", Name = "Friedrich Nietzche", Price = 15m },
                        new { ID = 3, Description = "Sleep with Immanuel Kant", Image = "/Pillows/ImmanuelKant.png", Name = "Immanuel Kant", Price = 15m },
                        new { ID = 4, Description = "Whoa", Image = "/Pillows/KarlMarx.png", Name = "Karl Marx", Price = 15m },
                        new { ID = 5, Description = "Chill with Ludwig for a while", Image = "/Pillows/LudwigWittgenstein.png", Name = "Ludwig Wittgenstein", Price = 15m },
                        new { ID = 6, Description = "It's Musashi!", Image = "/Pillows/MiyamotoMusashi.png", Name = "Miyamoto Musashi", Price = 15m },
                        new { ID = 7, Description = "It's Plato! What else can we say?", Image = "/Pillows/Plato.png", Name = "Plato", Price = 15m },
                        new { ID = 8, Description = "Sleep well with Rene", Image = "/Pillows/ReneDescartes.png", Name = "Rene Descartes", Price = 15m },
                        new { ID = 9, Description = "Never have insomnia", Image = "/Pillows/SorenKierkegaard.png", Name = "Soren Kierkegaard", Price = 15m },
                        new { ID = 10, Description = "Keep your nights cozy and warm", Image = "/Pillows/ThomasAquinas.png", Name = "Thomas Aquinas", Price = 15m }
                    );
                });

            modelBuilder.Entity("PhilBodPill.Models.Basket", b =>
                {
                    b.HasOne("PhilBodPill.Models.Order")
                        .WithMany("Baskets")
                        .HasForeignKey("OrderID");

                    b.HasOne("PhilBodPill.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
